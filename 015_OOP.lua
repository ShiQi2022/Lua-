---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 86176.
--- DateTime: 2022/12/12 20:55
---

-- 面向对象实现
-- 万物之父所有对象的基类 Object
Object = {};

-- 封装
function Object:new()
    local tempClass = {};
    -- 给空对象设置元表以及 __index
    self.__index = self;
    setmetatable(tempClass, self);
    return tempClass;
end

-- 继承
function Object:SubClass(className)
    -- 根据名字生成一张表，就是一个类
    _G[className] = {};
    local tempClass = _G[className];
    -- 设置自己的父类
    tempClass.base = self;
    -- 给子类设置元表以及 __index
    self.__index = self;
    setmetatable(tempClass, self);
end

-- 声明一个新的类
Object:SubClass("GameObject");
-- 成员变量
GameObject.PosX = 0;
GameObject.PosY = 0;
GameObject.PosZ = 0;
-- 成员方法
function GameObject:Move()
    self.PosX = self.PosX + 1;
    self.PosY = self.PosY + 1;
    self.PosZ = self.PosZ + 1;
end

-- 实例化对象使用
local obj = GameObject:new();
print(obj.PosX);
obj:Move();
print(obj.PosX);

local obj2 = GameObject:new();
print(obj2.PosX);
obj2:Move();
print(obj2.PosX);

-- 声明一个新的类 Player 继承 GameObject
GameObject:SubClass("Player");
-- 多态重写了 GameObject 的 Move 成员方法
function Player:Move()
    -- base 调用父类方法，用.自己传入第一个参数
    self.base.Move(self);
end

-- 实例化 Player 对象
local player = Player:new();
print(player.PosX);
player:Move();
print(player.PosX);