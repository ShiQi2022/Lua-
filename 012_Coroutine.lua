---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 86176.
--- DateTime: 2022/12/9 22:27
---

-- 协程 创建（协程本质是一个线程对象）
local co1 = coroutine.create(function()
    print("第一种创建协程方式");
end)
local co2 = coroutine.wrap(function()
    print("第二种创建协程方式");
end)

-- 协程 运行
-- 因为 coroutine.create 创建协程返回的是一个线程对象，所以对应的运行方式是 coroutine.resume
coroutine.resume(co1);
-- 因为 coroutine.wrap 创建协程返回的是一个函数对象，所以直接调用即可
co2();

-- 协程 挂起
testFunction = function()
    local i = 1;
    while true do
        print(i);
        i = i + 1;

        print("运行中状态需要在内部获取：" .. coroutine.status(co3));
        print(coroutine.running())
        coroutine.yield(i);
    end
end
co3 = coroutine.create(testFunction);
-- 协程默认第一个返回值表示是否启动成功
isOk, tempI = coroutine.resume(co3);
print(isOk, tempI);
isOk, tempI = coroutine.resume(co3);
print(isOk, tempI);

-- 协程 状态（结束状态：dead，暂停状态：suspended：暂停状态,running：进行中状态）
print(coroutine.status(co3));
print(coroutine.status(co1));
-- 可以获取到当前运行中的协程编号
print(coroutine.running())