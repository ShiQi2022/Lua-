---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 86176.
--- DateTime: 2022/12/7 18:37
---

-- 数组
-- lua 中所有复杂类型都是 table (表)
-- lua 中索引都是从 1 开始
-- lua 中 # 号是通用的获取长度的关键字
-- lua 中打印长度的时候 nil 会被忽略（当 table 中最后一位变成了 nil 会影响 # 获取的长度）

-- 数组 定义
testTable = { 1, "b", nil, 4, true, 6, false, nil };
print(testTable[1]);
print(testTable[3]);
print(#testTable)

-- 数组 遍历
for i = 1, #testTable do
    print("遍历 ：" .. tostring(testTable[i]));
end

-- 数组 二维
test2Table = { { 1, 2, 3 }, { 1.1, 1.2, 1.3 } };
print(test2Table[1][1]);
print(test2Table[1][2]);
print(test2Table[1][3]);
print(test2Table[2][1]);
print(test2Table[2][2]);
print(test2Table[2][3]);

-- 数组 二维 遍历
for i = 1, #test2Table do
    local b = test2Table[i];
    for j = 1, #b do
        print(b[j]);
    end
end

-- 数组 自定义索引（自定义索引有坑，这里的 5 会先执行，因为会忽略掉前面自定义索引的值，把 5 当作第一个值）
-- 自定义索引跳跃性设置，如果只跳跃一格不会断掉，长度受自定义索引最大值影响。
testTable_1 = { [1] = 1, [2] = 2, [3] = 3, [4] = 4, 5 };
print(#testTable_1);
for i = 1, #testTable_1 do
    print(testTable_1[i]);
end